name: CI 🏗️

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Git SSH
        run: |
          mkdir C:\Users\runneradmin\.ssh
          echo "$env:SSH_PRIVATE_KEY" > C:\Users\runneradmin\.ssh\id_rsa
          chmod 600 C:\Users\runneradmin\.ssh\id_rsa
          Start-Process ssh-agent -Verb RunAs
          Start-Process ssh-add C:\Users\runneradmin\.ssh\id_rsa
          ssh-keyscan -H github.com >> C:\Users\runneradmin\.ssh\known_hosts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
          pip install --index-url=https://bcms.bloomberg.com/pip/simple blpapi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Execute Tests & Generate Report
        run: |
          pip install coverage
          python -m coverage run -m unittest discover -s tests -p '*_test.py'
          python -m coverage xml

      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ env.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          name: ${{ matrix.os }}, python ${{ matrix.python-version }}

      - name: Install pypa/build
        run: python -m pip install build

      - name: Build a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/